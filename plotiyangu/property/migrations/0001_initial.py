# Generated by Django 5.0.2 on 2024-03-21 07:41

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Caretaker',
            fields=[
                ('caretaker_id', models.CharField(default='C1', max_length=10, primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=15)),
                ('description', models.TextField(blank=True, null=True)),
                ('username', models.CharField(max_length=30, unique=True)),
                ('hire_date', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('profile_pic', models.FileField(blank=True, null=True, upload_to='caretaker_profile_pics/')),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('contract_id', models.CharField(default='CO1', max_length=10, primary_key=True, serialize=False, unique=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('contract_image', models.FileField(blank=True, null=True, upload_to='contract_images/')),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('property_id', models.CharField(default='P1', max_length=10, primary_key=True, serialize=False, unique=True)),
                ('property_name', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('property_images', models.FileField(blank=True, null=True, upload_to='property_images/')),
                ('description', models.TextField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('tenant_id', models.CharField(default='T1', max_length=10, primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=15)),
                ('description', models.TextField(blank=True, null=True)),
                ('username', models.CharField(max_length=30, unique=True)),
                ('intake_date', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('profile_pic', models.FileField(blank=True, null=True, upload_to='profile_pics/')),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('tenant', 'Tenant'), ('landlord', 'Landlord'), ('admin', 'Admin')], max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('payment_id', models.CharField(default='PY1', max_length=10, primary_key=True, serialize=False, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date', models.DateField()),
                ('payment_method', models.CharField(choices=[('mpesa', 'Mpesa'), ('bank', 'Bank'), ('cash', 'Cash')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('payment_reference_no', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('contract_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property.contract')),
            ],
        ),
        migrations.AddField(
            model_name='contract',
            name='tenant_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property.tenant'),
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('unit_id', models.CharField(default='AB1', max_length=10, primary_key=True, serialize=False, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('unit_type', models.CharField(choices=[('bedsitter', 'Bedsitter'), ('two_bedroom', 'Two Bedroom'), ('single', 'Single'), ('one_bedroom', 'One Bedroom')], max_length=20)),
                ('rent_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('property_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property.property')),
            ],
        ),
        migrations.AddField(
            model_name='contract',
            name='unit_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property.unit'),
        ),
    ]
